
void helper(Node *root, set<int> &s,vector<int> &ans,int currLevel){
    if(root==NULL) return ;

    if(s.find(currLevel) == s.end()){
        ans.push_back(root->data);
}
        s.insert(currLevel);
   
    if(root->left!=NULL){
    helper(root->left,s,ans,currLevel+1);
    }
    if(root->right!=NULL){
    helper(root->right,s,ans,currLevel+1);
    }
}
vector<int> leftView(Node *root)
{
    vector<int> ans;
    set<int> s;
    helper(root, s,ans,0);
    return ans;
}







OR

  void recursion(TreeNode *root, int level, vector<int> &res)
    {
        if(root==NULL) return ;
        if(res.size()==level) res.push_back(root->val);
        recursion(root->left, level+1, res);
        recursion(root->right, level+1, res);
    }
    
    vector<int> leftSideView(TreeNode *root) {
        vector<int> res;
        recursion(root, 0, res);
        return res;
    }

