//use level order traversal with vertical lines concept, do -1 if go left, +1 if go right
// take last node at each level

class Solution{
    public:
    vector<int> bottomView(Node* root){
        vector<int> ans;
        if(root==NULL) return ans;
        map<int,int> mpp;
        queue<pair<node*,int>> q;
        q.push(root,0);
        while(!q.empty()){
            auto it=q.front();
            q.pop();
            Node* node=it.first;
            int line=it.second;
            mpp[line]=node->val;
            if(node->left)q.push({node->left,line-1});
            if(node->right)q.push({node->right,line+1});
        }
        for(auto it:mpp)ans.push_back(it.second);
        return ans;
    }
}
